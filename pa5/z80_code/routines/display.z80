;; displays HL WITHOUT padding
;; INPUT: hl
;; OUTPUT: (none)
;; DESTROYS: af,b,hl,de
_MyDispHL:
	di
	push iy
	ld iy,flags
	push hl
	ld de,_MyDispHL_scrap
	ld b,5
	bit 7,h
	jr z,_MyDispHL_positive
	ld a,h
	cpl
	ld h,a
	ld a,l
	cpl
	ld l,a
	inc hl
	ld a,'-'
	bcall(_PutC) ; if negative, display negative sign
_MyDispHL_positive:
	xor a
_MyDispHL_zero:
	ld (de),a
	inc de
	djnz _MyDispHL_zero
	;; now main loop
	ld b,0 ;; count # of digits
_MyDispHL_loop:
	bcall(_DivHLBy10)
	add a,'0'
	dec de
	ld (de),a
	inc b
	;; cond
	ld a,h
	or l
	jr nz,_MyDispHL_loop
_MyDispHL_print:
	ld a,(de)
	bcall(_PutC)
	inc de
	djnz _MyDispHL_print
	pop hl
	pop iy
	ei
	ret

;_MyDispHL_scrap:
;	.db 0,0,0,0,0
	

;;	inputs: hl = ptr to start of string
;; destroys: hl
_MyPutS:
	di
	im 1
	push iy
	ld iy,flags
	push bc
	push af
	ld a,(winBtm)
	ld b,a
_MyPutS1:
	ld a,(hl)
	inc hl
	cp _keyboard_newline
	jr z,_MyPutS3
	or a
	scf
	jr z,_MyPutS2
	bcall(_PutC)
_MyPutS_win:
	ld a,(curRow)
	cp b
	jr c,_MyPutS1
_MyPutS2:
	pop bc
	ld a,b
	pop bc
	pop iy
	im 2
	ei
	ret
_MyPutS3: ; newline
	push bc
	push hl
	push de
	bcall(_NewLine)
	pop de
	pop hl
	pop bc
	jr _MyPutS_win